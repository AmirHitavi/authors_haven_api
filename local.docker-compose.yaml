version: "3.9"

services:
  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"
    networks:
      - authors_haven_network

  postgres:
    container_name: "postgres"
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    env_file:
      - .envs/.local/.postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_backup:/backups
    networks:
      - authors_haven_network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 'pg_pass'
      PGADMIN_LISTEN_PORT: 5050

    depends_on:
      - postgres
    ports:
      - "5050:5050"
    networks:
      - authors_haven_network
    restart: unless-stopped

  api:
    container_name: "api"
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    env_file:
      - .envs/.local/.postgres
      - .envs/.local/.django
    volumes:
      - .:/app:z
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    depends_on:
      - postgres
      - mailhog
      - redis
      - es
    command: /start.sh
    networks:
      - authors_haven_network
  
  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - authors_haven_network
  
  redis:
      image: redis:7-alpine
      container_name: redis
      networks:
          - authors_haven_network
  
  worker:
    container_name: worker
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start_worker.sh
    volumes:
      - .:/app
    env_file:
      - .envs/.local/.django
      - .envs/.local/.postgres
    depends_on:
      - redis
      - postgres
      - mailhog
    networks:
      - authors_haven_network
  
  flower:
    container_name: flower
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start_flower.sh
    ports:
      - "5555:5555"
    volumes:
      - flower_data:/data
    env_file:
      - .envs/.local/.django
      - .envs/.local/.postgres
    depends_on:
      - redis
      - postgres
    networks:
      - authors_haven_network
  
  es:
    image: elasticsearch:7.17.24
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    networks:
      - authors_haven_network

networks:
  authors_haven_network:
    driver: bridge

volumes:
  local_postgres_data:
  local_postgres_backup:
  static_volume:
  media_volume:
  flower_data: